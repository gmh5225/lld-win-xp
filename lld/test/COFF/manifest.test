# RUN: yaml2obj %p/Inputs/ret42.yaml -o %t.obj

# RUN: rm -f %t.exe.manifest
# RUN: lld-link /out:%t.exe /entry:main %t.obj
# RUN: test ! -e %t.exe.manifest

# RUN: lld-link /manifest /out:%t.exe /entry:main %t.obj
# RUN: FileCheck -check-prefix=MANIFEST %s < %t.exe.manifest

MANIFEST: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
MANIFEST: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
MANIFEST:   <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
MANIFEST:     <security>
MANIFEST:       <requestedPrivileges>
MANIFEST:          <requestedExecutionLevel level='asInvoker' uiAccess='false'/>
MANIFEST:       </requestedPrivileges>
MANIFEST:     </security>
MANIFEST:   </trustInfo>
MANIFEST: </assembly>

# RUN: lld-link /out:%t.exe /entry:main /manifest \
# RUN:   /manifestuac:"level='requireAdministrator' uiAccess='true'" %t.obj
# RUN: FileCheck -check-prefix=UAC %s < %t.exe.manifest

UAC: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
UAC: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
UAC:   <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
UAC:     <security>
UAC:       <requestedPrivileges>
UAC:          <requestedExecutionLevel level='requireAdministrator' uiAccess='true'/>
UAC:       </requestedPrivileges>
UAC:     </security>
UAC:   </trustInfo>
UAC: </assembly>

# /manifestdependency implies /manifest. (/manifestuac doesn't.)
# RUN: lld-link /out:%t.exe /entry:main \
# RUN:   /manifestdependency:"foo='bar'" %t.obj
# RUN: FileCheck -check-prefix=DEPENDENCY %s < %t.exe.manifest

DEPENDENCY: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
DEPENDENCY: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
DEPENDENCY:   <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
DEPENDENCY:     <security>
DEPENDENCY:       <requestedPrivileges>
DEPENDENCY:          <requestedExecutionLevel level='asInvoker' uiAccess='false'/>
DEPENDENCY:       </requestedPrivileges>
DEPENDENCY:     </security>
DEPENDENCY:   </trustInfo>
DEPENDENCY:   <dependency>
DEPENDENCY:     <dependentAssembly>
DEPENDENCY:       <assemblyIdentity foo='bar' />
DEPENDENCY:     </dependentAssembly>
DEPENDENCY:   </dependency>
DEPENDENCY: </assembly>

# RUN: lld-link /manifest /out:%t.exe /entry:main /manifestuac:no \
# RUN:   /manifestdependency:"foo='bar'" %t.obj
# RUN: FileCheck -check-prefix=NOUAC %s < %t.exe.manifest

NOUAC: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
NOUAC: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
NOUAC:   <dependency>
NOUAC:     <dependentAssembly>
NOUAC:       <assemblyIdentity foo='bar' />
NOUAC:     </dependentAssembly>
NOUAC:   </dependency>
NOUAC: </assembly>

# RUN: lld-link /manifest /out:%t.exe /entry:main /manifestuac:no %t.obj
# RUN: FileCheck -check-prefix=NOUACNODEP %s < %t.exe.manifest

NOUACNODEP: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
NOUACNODEP: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
NOUACNODEP: </assembly>

# Several /manifestdependency: flags are naively dedup'd.
# RUN: lld-link /out:%t.exe /entry:main \
# RUN:   /manifestdependency:"foo='bar'" \
# RUN:   /manifestdependency:"foo='bar'" \
# RUN:   /manifestdependency:"baz='quux'" \
# RUN:   %t.obj
# RUN: FileCheck -check-prefix=SEVERALDEPS %s < %t.exe.manifest

SEVERALDEPS: <?xml version='1.0' encoding='UTF-8' standalone='yes'?>
SEVERALDEPS: <assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
SEVERALDEPS:   <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
SEVERALDEPS:     <security>
SEVERALDEPS:       <requestedPrivileges>
SEVERALDEPS:          <requestedExecutionLevel level='asInvoker' uiAccess='false'/>
SEVERALDEPS:       </requestedPrivileges>
SEVERALDEPS:     </security>
SEVERALDEPS:   </trustInfo>
SEVERALDEPS:   <dependency>
SEVERALDEPS:     <dependentAssembly>
SEVERALDEPS:       <assemblyIdentity foo='bar' />
SEVERALDEPS:     </dependentAssembly>
SEVERALDEPS:   <dependency>
SEVERALDEPS:     <dependentAssembly>
SEVERALDEPS:       <assemblyIdentity baz='quux' />
SEVERALDEPS:     </dependentAssembly>
SEVERALDEPS:   </dependency>
SEVERALDEPS: </assembly>

# /manifestdependency: flags can be in .drectve sections.
# RUN: yaml2obj %p/Inputs/manifestdependency-drectve.yaml -o %t.dir.obj
# RUN: rm %t.exe.manifest
# RUN: lld-link /out:%t.exe /entry:main \
# RUN:   %t.obj %t.dir.obj
# RUN: FileCheck -check-prefix=SEVERALDEPS %s < %t.exe.manifest

# /manifestdependency: flags in .drectve sections are ignored with an
# explicit /manifest:no.
# RUN: rm %t.exe.manifest
# RUN: lld-link /out:%t.exe /entry:main /manifest:no \
# RUN:   %t.obj %t.dir.obj
# RUN: test ! -e %t.exe.manifest

# Test that /manifestdependency: flags in .drectve sections work
# with /manifest:embed too.
# RUN: lld-link /out:%t.exe /entry:main /manifest:embed \
# RUN:   %t.obj %t.dir.obj
# RUN: test ! -e %t.exe.manifest
# RUN: llvm-readobj --coff-resources %t.exe \
# RUN:     | FileCheck --check-prefix EMBED %s

 EMBED: Data (
 EMBED:   0000: 3C3F786D 6C207665 7273696F 6E3D2731  |<?xml version='1|
 EMBED:   0010: 2E302720 656E636F 64696E67 3D275554  |.0' encoding='UT|
 EMBED:   0020: 462D3827 20737461 6E64616C 6F6E653D  |F-8' standalone=|
 EMBED:   0030: 27796573 273F3E0A 3C617373 656D626C  |'yes'?>.<assembl|
 EMBED:   0040: 7920786D 6C6E733D 2775726E 3A736368  |y xmlns='urn:sch|
 EMBED:   0050: 656D6173 2D6D6963 726F736F 66742D63  |emas-microsoft-c|
 EMBED:   0060: 6F6D3A61 736D2E76 3127206D 616E6966  |om:asm.v1' manif|
 EMBED:   0070: 65737456 65727369 6F6E3D27 312E3027  |estVersion='1.0'|
 EMBED:   0080: 3E0A2020 3C747275 7374496E 666F2078  |>.  <trustInfo x|
 EMBED:   0090: 6D6C6E73 3D227572 6E3A7363 68656D61  |mlns="urn:schema|
 EMBED:   00A0: 732D6D69 63726F73 6F66742D 636F6D3A  |s-microsoft-com:|
 EMBED:   00B0: 61736D2E 7633223E 0A202020 203C7365  |asm.v3">.    <se|
 EMBED:   00C0: 63757269 74793E0A 20202020 20203C72  |curity>.      <r|
 EMBED:   00D0: 65717565 73746564 50726976 696C6567  |equestedPrivileg|
 EMBED:   00E0: 65733E0A 20202020 20202020 203C7265  |es>.         <re|
 EMBED:   00F0: 71756573 74656445 78656375 74696F6E  |questedExecution|
 EMBED:   0100: 4C657665 6C206C65 76656C3D 27617349  |Level level='asI|
 EMBED:   0110: 6E766F6B 65722720 75694163 63657373  |nvoker' uiAccess|
 EMBED:   0120: 3D276661 6C736527 2F3E0A20 20202020  |='false'/>.     |
 EMBED:   0130: 203C2F72 65717565 73746564 50726976  | </requestedPriv|
 EMBED:   0140: 696C6567 65733E0A 20202020 3C2F7365  |ileges>.    </se|
 EMBED:   0150: 63757269 74793E0A 20203C2F 74727573  |curity>.  </trus|
 EMBED:   0160: 74496E66 6F3E0A20 203C6465 70656E64  |tInfo>.  <depend|
 EMBED:   0170: 656E6379 3E0A2020 20203C64 6570656E  |ency>.    <depen|
 EMBED:   0180: 64656E74 41737365 6D626C79 3E0A2020  |dentAssembly>.  |
 EMBED:   0190: 20202020 3C617373 656D626C 79496465  |    <assemblyIde|
 EMBED:   01A0: 6E746974 7920666F 6F3D2762 61722720  |ntity foo='bar' |
 EMBED:   01B0: 2F3E0A20 2020203C 2F646570 656E6465  |/>.    </depende|
 EMBED:   01C0: 6E744173 73656D62 6C793E0A 20203C2F  |ntAssembly>.  </|
 EMBED:   01D0: 64657065 6E64656E 63793E0A 20203C64  |dependency>.  <d|
 EMBED:   01E0: 6570656E 64656E63 793E0A20 2020203C  |ependency>.    <|
 EMBED:   01F0: 64657065 6E64656E 74417373 656D626C  |dependentAssembl|
 EMBED:   0200: 793E0A20 20202020 203C6173 73656D62  |y>.      <assemb|
 EMBED:   0210: 6C794964 656E7469 74792062 617A3D27  |lyIdentity baz='|
 EMBED:   0220: 71757578 27202F3E 0A202020 203C2F64  |quux' />.    </d|
 EMBED:   0230: 6570656E 64656E74 41737365 6D626C79  |ependentAssembly|
 EMBED:   0240: 3E0A2020 3C2F6465 70656E64 656E6379  |>.  </dependency|
 EMBED:   0250: 3E0A3C2F 61737365 6D626C79 3E0A      |>.</assembly>.|
 EMBED: )
